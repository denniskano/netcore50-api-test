import groovy.json.JsonSlurper

node {
    ws('netcore') {
        stage('SCM') {
            git branch: 'main', url: 'https://github.com/denniskano/netcore50-api-test'           
        }
        stage('Build') {
            dotnet_build();
        }
        stage('Docker') {
              bat(script: 'docker login --username %UsernameDockerHub% --password %PasswordDockerHub%', returnStdout: true);
              bat(script: 'docker build -t denniskano/servicenet5 .', returnStdout: true);
              bat(script: 'docker push denniskano/servicenet5', returnStdout: true);            
        }
        stage('Deploy Dev') {
              bat(script: 'az login --service-principal -u f5a6babb-ec90-46e3-bec9-07b50adcaf9c -p dbMkvlZexZmGfh-VAkpVgiXcQA3qRfZ~.V --tenant 020e5211-016d-4f64-8857-4950dba3c2ed',returnStdout:true);
              bat(script: 'az account set --subscription "Azure subscription 1"',returnStdout:true); 
              bat(script: 'az container restart --name micro5testservicejenkins --resource-group Devops', returnStdout: true);       
        }
        stage('Deploy Prod') {
             bat(script: 'az aks get-credentials --resource-group  Devops  --name k8s-julio-jenkins & kubectl config get-contexts --kubeconfig=%KUBE_CONFIG_PATH%', returnStdout: true);
             bat(script: 'kubectl config use-context k8s-julio-jenkins --kubeconfig=%KUBE_CONFIG_PATH%', returnStdout: true);
             bat(script: 'Kubectl delete --all pods --kubeconfig=%KUBE_CONFIG_PATH% & kubectl apply -f k8s.yml --kubeconfig=%KUBE_CONFIG_PATH%', returnStdout: true);
        }        
    }
}

def dotnet_build() {
    bat(script: 'dotnet restore', returnStdout: true);
    bat(script: 'dotnet build', returnStdout: true);
    bat(script: 'dotnet test', returnStdout: true);
}